extends c

snippet header "Competitive Programming Header"
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cassert>
#include<ctime>
#include<cmath>

#include<algorithm>
#include<bitset>
#include<complex>
#include<deque>
#include<iostream>
#include<map>
#include<numeric>
#include<queue>
#include<stack>
#include<string>
#include<set>
#include<vector>
using namespace std;
endsnippet

snippet pb "push back" w
push_back(${1:<value>})
endsnippet

snippet mp "make pair" w
make_pair(${1:<value>},${2:<value>})
endsnippet

snippet x "first" w
first
endsnippet

snippet y "second" w
second
endsnippet

snippet sz "size" w
(int(${1:<data>}.size()))
endsnippet

snippet ll "long long" w
long long 
endsnippet

snippet ld "long double" w
long double 
endsnippet

snippet ull "unsigned long long" w
unsigned long long 
endsnippet

snippet constant "Common Constant"
const int INF = (int) 1e9;
const long long INF64 = (long long) 1e18;
const long double eps = 1e-9;
const long double pi = 3.14159265358979323846;
endsnippet

snippet all "begin(), end()" w
${1:val}.begin(), $1.end()
endsnippet
